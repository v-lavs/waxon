/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}.menu{padding:0;margin:0;list-style-type:none}@media only screen and (min-width: 1170px){.menu{display:block}}.menu .menu-item{text-align:left;border-bottom:1px solid #fff}.menu .menu-item:last-child{border:none}@media only screen and (min-width: 1170px){.menu .menu-item{display:inline-block;text-align:right;border:none}}.menu .menu-item a{display:block;color:#fff;text-decoration:none;padding:18px 13px;text-transform:uppercase;transition:.35s}.menu .menu-item a:hover{color:#c7b299}@media all and (max-width: 1170px){.main-nav-wrap{position:fixed;top:0;bottom:0;right:0;max-width:320px;width:100%;z-index:9999;background:#191919;margin:0;padding:40px 25px 25px 45px;text-align:right;transform:translateX(100%);transition:.8s ease}.main-nav-wrap.open{transform:translateX(0)}.main-nav-wrap.open .menu{display:block}}.close-main-nav{background:transparent;border:none;font-weight:700;color:#fff;outline:none}@media only screen and (min-width: 1170px){.close-main-nav{display:none}}.owl-theme .owl-nav{width:100%;position:absolute;bottom:50%;transform:translateY(50%);margin-top:0;display:none}@media only screen and (min-width: 970px){.owl-theme .owl-nav{display:flex;justify-content:space-between}}.owl-theme .owl-nav [class*='owl-']{background-color:transparent}.owl-theme .owl-nav [class*='owl-']:hover{background-color:transparent}.owl-theme .owl-nav [class*='owl-'] .fa{font-size:80px;opacity:.5;color:#fff;transition:.35s}.owl-theme .owl-nav [class*='owl-'] .fa:hover{color:#c7b299;outline:none}.owl-theme .owl-nav .owl-prev{margin-left:142px}.owl-theme .owl-nav .owl-next{margin-right:142px}.owl-theme .owl-dots{position:absolute;bottom:30px;left:50%;transform:translateX(-50%)}.owl-theme .owl-dots .owl-dot span{background:rgba(255,255,255,0.5);width:11px;height:11px;border-radius:50%;margin:5px 5px}.owl-theme .owl-dots .owl-dot span:hover,.owl-theme .owl-dots .owl-dot span:focus{background:transparent;width:15px;height:15px;margin:3px 3px;border:2px solid rgba(255,255,255,0.5)}.owl-theme .owl-dots .owl-dot.active span{background:transparent;width:15px;height:15px;margin:3px 3px;border:2px solid rgba(255,255,255,0.5)}.btn{display:inline-block;color:#fff;font-size:14px;font-weight:800;font-family:"Raleway",sans-serif;text-decoration:none;text-transform:uppercase;line-height:1;padding:21px 39px 21px 37px;border-radius:3px}.btn-main{min-width:170px;text-align:center;background-color:#998675;box-shadow:inset 0px -3px 0 0 #736357;transition:.35s}.btn-main:hover{background-color:#c7b299;box-shadow:inset 0px -3px 0 0 #998675;color:#fff}.btn-search{padding:15px}.btn-cloce{padding:0 15px}.btn-project{color:#8c8c8c;line-height:1.5;font-weight:300;text-transform:none;padding:7px 21px 5px;border:solid 1px #ebebeb}.btn-project:hover{color:#fff;background:#998675}.text-xs{font-size:14px}.text-sm{font-size:18px}.text-md{font-family:"Raleway",sans-serif;font-size:30px;font-weight:600}.text-lg{font-family:"Raleway",sans-serif;font-size:20px;font-weight:500;line-height:1.1}@media only screen and (min-width: 768px){.text-lg{font-size:36px}}.banner-title{font-family:"Raleway",sans-serif;font-size:30px;font-weight:800;line-height:1.1}@media only screen and (min-width: 768px){.banner-title{font-size:52px}}.banner-title .text-section{font-size:16px;font-weight:300;line-height:1.75}.title-card-service{font-size:22px;font-weight:600;font-family:"Raleway",sans-serif}.title-section-theme{font-size:28px;font-weight:400;line-height:1;font-family:"Raleway",sans-serif}.title-card-project{font-size:20px;font-weight:500;line-height:1.2;font-family:"Raleway",sans-serif}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}body{font:300 14px/1.75 "Montserrat",sans-serif;color:#8c8c8c}@media only screen and (min-width: 768px){body{font:400 16px/1.75 "Montserrat",sans-serif}}.container{width:100%;max-width:1260px;margin:0 auto;padding:0 15px}.container-default{width:100%;max-width:1200px;margin:0 auto}.clearfix:after{content:"";clear:both;display:block}.site-header{position:fixed;left:0;right:0;top:0;background:transparent;padding:25px 0;z-index:2000}@media only screen and (min-width: 768px){.site-header{padding:40px 0}}.site-header .container{display:flex;flex-wrap:nowrap;justify-content:space-between;align-items:center}.site-header .container:before,.site-header .container:after{display:none}.site-header .logo-wrap{max-width:150px}@media only screen and (min-width: 768px){.site-header .logo-wrap{max-width:181px;height:56px}}.site-header .logo-wrap img{display:block;width:100%;height:auto}.site-header .logo-link{display:block}.site-header .logo-link img{display:block;width:100%;height:auto}.site-header .right-bar a{color:#fff;text-decoration:none;-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;-o-transition:.35s;transition:.35s}.site-header .right-bar a:hover{color:#c7b299;outline:none}.site-header .right-bar .fa{display:inline-block;font:normal normal normal 20px/1 FontAwesome;text-rendering:auto;-webkit-font-smoothing:antialiased}.site-header .right-bar .icon{font-size:20px}.site-header .burger-btn{display:inline-block;background:transparent;border:none;color:#fff;cursor:pointer;outline:none;margin-left:10px}@media only screen and (min-width: 1170px){.site-header .burger-btn{display:none}}.site-header .search-bar{transform:translateY(-100%);transition:.5s;position:absolute;right:0;left:0;top:0;width:100%;background:#191919;padding:25px;color:#fff;opacity:0;overflow:hidden}.site-header .search-bar .container{display:flex;justify-content:center}.site-header .search-bar.active{transform:translateY(0);opacity:1}.site-header .search-bar .form-control,.site-header .search-bar .input-group-addon{border:none;background:transparent;color:#fff}.site-header .search-bar .input-group{width:100%;display:flex;justify-content:center}.site-header .search-bar .input-group>*{flex-shrink:0}.site-header .search-bar .form-control{width:75%;padding:15px}.site-header .search-bar .btn-close{font-size:20px;font-weight:700;padding:0 15px 0}.site-header .search-bar ::-webkit-input-placeholder{color:#8c8c8c}.site-header .search-bar ::-moz-placeholder{color:#8c8c8c}.site-header .search-bar :-ms-input-placeholder{color:#8c8c8c}.site-header .search-bar :-moz-placeholder{color:#8c8c8c}.section-banner{position:relative}.section-banner .banner-slide{display:table;position:relative;width:100%;background-position:center;background-repeat:no-repeat;background-size:cover;min-height:100vh;padding:70px 0}.section-banner .banner-slide:after{position:absolute;content:"";background:rgba(17,17,17,0.7);left:0;right:0;bottom:0;top:0;z-index:1;opacity:0.6}.section-banner .banner-slide .inner-wrap{width:100%;display:table-cell;vertical-align:middle;margin:0 auto}.section-banner .banner-slide .container{position:relative;text-align:center;color:#fff;z-index:2}.section-banner .banner-slide .banner-title{margin:0 0 5px}.section-banner .banner-slide .banner-subtitle{margin-bottom:7px}.section-banner .banner-slide .banner-text{width:100%;max-width:562px;margin:0 auto 48px;line-height:1.5}.section-services{color:#8c8c8c;padding:89px 0}.section-services .services-item{position:relative;text-align:center;padding-bottom:29px;margin-bottom:25px}@media only screen and (min-width: 970px){.section-services .services-item{margin-bottom:0}}.section-services .services-item:after{position:absolute;content:"";width:70px;height:3px;background:#f1eee9;bottom:0;left:50%;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);-o-transform:translateX(-50%);transform:translateX(-50%)}.section-services .services-item:hover:after{background-color:#c7b299}.section-services .services-item:hover>.link-services,.section-services .services-item:hover>.title-card-service a{color:#c7b299;outline:none}.section-services .services-item .link-services,.section-services .services-item .link-title-services{display:block;text-decoration:none;color:#555;-webkit-transition:.35s;-moz-transition:.35s;-ms-transition:.35s;-o-transition:.35s;transition:.35s}.section-services .services-item .icon{font-size:44px;line-height:1}.section-services .services-item .link-services{margin-bottom:13px}.section-services .title-card-service{margin:0 0 5px}.section-services .text-card-services{margin:0;padding:0}.section-realization{padding-top:83px;background-color:#fbfaf8;text-align:center}.section-realization .container-img{width:100%;max-width:1230px;overflow:hidden}.section-realization .img-browsers{width:100%;display:block}.section-themes{background:linear-gradient(to right, #211b19, #4e3427)}.section-themes .container{padding:45px 0}.section-themes .container .title-section-theme{color:#fff;margin:0}.section-themes .container .title-section-theme span{color:#c7b299}.section-themes .container .sub-title-section{margin:0 0 5px;color:#615855}.section-themes .wrap-btn{text-align:right}.section-project{padding:80px 0;text-align:center}.section-project .nav-list{margin:0 -15px 40px}.section-project .nav-item{display:inline-block;margin-right:6px}.section-project .nav-item:last-child{margin-right:0}.section-project .project-list{margin:0 -15px 40px}.section-project .card-project{background:#fbfaf8}.section-project .img-wrap{max-width:370px;margin:0 auto}.section-project .img-project{width:100%;height:auto;display:block}.section-project .content-card{position:relative;text-align:left;padding:24px 28px 23px}.section-project .content-card:before{position:absolute;content:"";top:-33px;left:12px;border:23px solid transparent;border-bottom:18px solid #fbfaf8}.section-project .title-card-project{color:#c7b299;margin:0}.section-project .category-name{margin:0}.section-presentation{position:relative;width:100%;height:705px;background-position:center center;background-repeat:no-repeat;background-size:cover;color:#fff}.section-presentation:after{position:absolute;content:"";left:0;right:0;top:0;bottom:0;background:rgba(17,17,17,0.5);z-index:1}.section-presentation .container{position:relative;text-align:center;color:#fff;top:50%;transform:translateY(-50%);z-index:3}.section-presentation .title-section{color:#fff;margin-bottom:10px}.section-presentation .sub-title-section{width:100%;max-width:552px}.section-presentation .open-video{display:block;padding:15px;width:100px;height:100px;border-radius:50%;border:none;background-color:#000000;opacity:.2;margin:0 auto 30px;transition:.35s}.section-presentation .open-video:hover{background:#4e3427}.section-presentation .round{display:block;max-width:70px}.section-devices{padding:79px 0 0 0}.section-devices .wrap-img-section{width:40%;max-width:470px;padding-left:47px;float:left}.section-devices .content-text{width:60%;float:right;padding:0 15px}.section-devices .text-section{margin:0 0 30px}.section-devices .property-item{position:relative;padding-left:100px;line-height:2}.section-devices .property-item:before{content:'>';color:#fff;font-size:21px;font-weight:400;text-align:center;display:inline-block;line-height:1;position:absolute;width:21px;height:21px;border-radius:50%;background-color:#c7b299;top:5px;left:53px}.section-devices img{width:100%;display:block}.section-counters{padding:69px 0;background:linear-gradient(to right, #211b19, #4e3427)}.section-services .services-list,.section-project .nav-list,.section-project .project-list,.section-devices .property-list,.section-counters .counter-list{list-style-type:none;padding:0}.title-section{color:#555;margin:0 auto 7px}.sub-title-section{width:100%;max-width:757px;margin:0 auto 35px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
